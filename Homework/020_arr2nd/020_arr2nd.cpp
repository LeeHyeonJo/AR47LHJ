// 020_arr2nd.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
// 2차원 배열에 대한 개념. 배열에 대한 복습 필요. 
// 0321과제: 박승호, 정석 풀이 보고 비교하기. (다 띄운걸 다시 지우고, 새롭게 띄울것) 
// 전체 지우고 재출력하니까, 기본 기준  damagerender 에서대미지 출력이 빠져야 함. 

#include <iostream>


// RAM 이란? (64기가 메모리 기준으로) : 1바이트가 64기가만큼 존재하는 1차원 배열 
// 2,3,4차원을 만들어도 결국은 1차원 배열인 메모리 안에 들어가있음
// 따라서 궁극적으로 모든 배열은 "1차원" 일 수 밖에 없음. 

// 그럼 2차원 배열은 무엇인가?" 사람이 인식하기 쉽게 풀어둔 개념에 불과하다.
// 하단 예시 참고 

int main()
{
    int arr[2][2] = { {1,2},{3,4} } // 배열의 초기화": = { {},{} }

        // 어떻게 들어가 있을까? 
        // [1] [2]
        // [3] [4] 

        // >> 정수 선언 후 확인해보면 
        // [1] [2] [3] [4] 로 붙어있는 것을 확인할 수 있음. 

    // 실제로 확인해볼것
    // 정말 그 위치에 들어가있는지 확인 중. (이렇게 선언하면 메모리의 위치 값을 정수로 확인할 수 잇음)
        // 4바이트씩 떨어져있으며 일렬로 붙어있음을 알 수 잇음. (여기까진 이해함)

    __int64 address1 = (__int64)&arr[0][0];
    int v = arr1[0][0];
    __int64 address2 = (__int64)&arr[0][1];
    int v = arr2[0][0];
    __int64 address3 = (__int64)&arr[1][0];
    int v = arr3[0][0];
    __int64 address4 = (__int64)&arr[1][1];
    int v = arr4[0][0];


    //이후 학생 이름 랜덤 출력 프로그램을 만들었음. 필기 보고 복붙(랜덤 홈워크쪽) 

}

