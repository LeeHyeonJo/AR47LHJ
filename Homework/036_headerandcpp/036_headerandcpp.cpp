// 039_headerandcpp.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
// 오늘은 헤더와 cpp를 나누는 법을 배울거임. -> 헤더를 사용해서 player 클래스를 쪼갤 수 있다. 
// ctrl + k o : 같은 이름의 헤더 cpp 와리가리 >> 단축키 변경해서 쓰는게 편함. (ctrl+왼쪽 shift로 바꾸기) 

// 에러: 확인할 수 없는 외부기호(참고): 네가 구현 안했다는 뜻 

// 이거 필기 복붙 꼭 해오기. 

#include <iostream>
#include <player.h> // 헤더에 클래스의 선언들을 다 쪼개둠. 이것이 "나눈다"는 것임. 
// *c++의 정식 헤더 확장자는 hpp임. 근데 아무도 안씀~
// C하던 사람들이 넘어와서 씀.. 근데 그게 굳어짐. .h 확장자를 쓰게 됨. 

player::player()
    : hp(100), att(10) // 이게 이니셜라이저 

{

}

int main()
{
    // 1. 컴파일러가 하는 일(2가지): 모든 헤더를 모아서, 1개의 파일로 만들어라. 그 다음 .cpp 파일들을 전부 검사한다. (걔네 다 모아서 들어있는 헤더들 싻 다 모아서 위로 올림)
    // 즉, 내가 친 모든 코드는 단 1개의 파일로 응축되게 된다. 이하 player.h 파일 참고. 
    std::cout << "Hello World!\n";
}


// 새항목 -> 클래스 
// 이건 선언과 구현 (선언과 헤더를 나눠주는)을 처음부터 나눠서할 수 있게 해줌. 


// 3. 에러가 안나는 경우.
// 함수 선언후 사용하지 않았을때, 컴파일러는 알아서 십고 지나감. 
// 구현을 하지 않았는데도 선언만 있는 함수의 경우 -> 그리고 그 함수를 사용하지 않았다면 -> 컴파일러가 알아서 그 함수 무시하고 지나감. 


// 0324 숙제 파일 다 쪼개볼거임. 